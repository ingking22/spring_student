<beans:beans xmlns="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xmlns:task="http://www.springframework.org/schema/task"
			 xmlns:security="http://www.springframework.org/schema/security"
			 xmlns:websocket="http://www.springframework.org/schema/websocket"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">
	<!--
     DispatcherServlet Context: defines this servlet's request-processing infrastructure
    -->
	<!--
     Enables the Spring MVC @Controller programming model
    -->
	<task:annotation-driven/>
	<annotation-driven/>
	<context:annotation-config/>
	<context:component-scan base-package="com.teamproject.StudentCommunity.controller"/>
	<context:component-scan base-package="com.teamproject.StudentCommunity.service"/>
	<context:component-scan base-package="com.teamproject.StudentCommunity.PagingService"/>
	<context:component-scan base-package="com.teamproject.StudentCommunity.scheduler"/>
	<!--
     Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory
    -->
	<resources mapping="/resources/**" location="/resources/"/>
	<!--
     Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory
    -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/"/>
		<beans:property name="suffix" value=".jsp"/>
	</beans:bean>
	<!--
       &lt;!&ndash; properties 파일 내용을 사용할 수 있도록 Bean 등록 &ndash;&gt;
    -->
	<!--  properties 파일 내용을 사용할 수 있도록 Bean 등록  -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location">
			<beans:value>/WEB-INF/properties/db.properties</beans:value>
		</beans:property>
	</beans:bean>
	<beans:bean class="org.apache.commons.dbcp2.BasicDataSource" id="basic_data_source">
		<beans:property name="driverClassName" value="${db.classname}"/>
		<beans:property name="url" value="${db.url}"/>
		<beans:property name="username" value="${db.username}"/>
		<beans:property name="password" value="${db.password}"/>
	</beans:bean>
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="basic_data_source"/>
		<beans:property name="mapperLocations" value="/WEB-INF/mapper/*.xml"/>
		<beans:property name="configLocation" value="classpath:/mybatis-config/mybatis-config.xml"/>
	</beans:bean>
	<!--   MapperScan  -->
	<beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<beans:property name="basePackage" value="com.teamproject.StudentCommunity.mapper"/>
	</beans:bean>
	<!--  email보내기설정  -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com"/>
		<beans:property name="port" value="587"/>
		<beans:property name="defaultEncoding" value="utf-8"/>
		<beans:property name="username" value="tkksm2@gmail.com"/>
		<beans:property name="password" value="antutajrwrmvflyo"/>
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>


	 <!-- Interceptor 등록하기 -->
	  <interceptors>
	    <interceptor>
	      <mapping path="/**"/>
	      <beans:bean class="com.teamproject.StudentCommunity.interceptor.TopMenuInterceptor"/>
	    </interceptor>  
	    <interceptor>
	      <mapping path="/admin/**"/>
	      <beans:bean class="com.teamproject.StudentCommunity.interceptor.CheckAdminInterceptor"/>
	    </interceptor>
	    <interceptor>
	      <mapping path="/member/before_modify_check_failure"/>
	      <mapping path="/member/before_modify"/>
	      <mapping path="/member/modify"/>
	      <mapping path="/member/myPage"/>
	      <mapping path="/member/myNote"/>
	      <mapping path="/function/**"/>
			<mapping path="/course"/>
	      <beans:bean class="com.teamproject.StudentCommunity.interceptor.LoginMemberInterceptor"/>
	    </interceptor>
	    <interceptor>
	      <mapping path="/board/**"/>
	      <mapping path="/university/**"/>
	      <beans:bean class="com.teamproject.StudentCommunity.interceptor.CheckMemberSchoolInterceptor"/>
	    </interceptor>
	  </interceptors>  
	<!-- 스케쥴러 -->

	<!-- 로그인한 유저의 아이디를 알아야한다.session을 웹 소켓 session에다가 http session을 올리기 위해서
	 	HttpSessionHandshakeInterceptor-->
	<!-- websocket handler -->
	<beans:bean id="replyHandler" class="com.teamproject.StudentCommunity.handler.ReplyHandler"/>

	<websocket:handlers>
		<websocket:mapping path="/replyHandler" handler="replyHandler"/>
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
	</websocket:handlers>


</beans:beans>

